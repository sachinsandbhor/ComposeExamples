<resources>
    <string name="app_name">ComposeSample</string>
    <string name="happy_birthday">Happy birthday!!</string>
    <string name="title">Jetpack Compose tutorial</string>
    <string name="message1">Jetpack Compose is a modern toolkit for building native Android UI.
        Compose simplifies and accelerates UI development on Android with less code, powerful
        tools, and intuitive Kotlin APIs.</string>
    <string name="message2">In this tutorial, you build a simple UI component with declarative
        functions. You call Compose functions to say what elements you want and the Compose
        compiler does the rest. Compose is built around Composable functions. These functions let
        you define your app\'s UI programmatically because they let you describe how it should look
        and provide data dependencies, rather than focus on the process of the UI\'s construction,
        such as initializing an element and then attaching it to a parent. To create a Composable
        function, you add the @Composable annotation to the function name.</string>
    <string name="task_manager_text1">All tasks completed</string>
    <string name="task_manager_text2"> Nice work!</string>
    <string name="roll">Roll</string>
    <string name="tap_lemon">Tap the lemon tree to select a lemon</string>
    <string name="keep_tapping">Keep tapping the lemon to squeeze it</string>
    <string name="tap_to_drink">Tap the lemonade to drink it</string>
    <string name="tap_empty">Tap the empty glass to start again</string>
    <string name="lemon_tree">Lemon tree</string>
    <string name="lemon">Lemon</string>
    <string name="glass_of_lemonade">Glass of lemonade</string>
    <string name="empty_glass">Empty glass</string>



</resources>
